'''–ï—Å—Ç—å –º–∞–ª–µ–Ω—å–∫–∞—è –ø–µ–∫–∞—Ä–Ω—è: –ø–∏—Ä–æ–∂–Ω—ã–µ, –ø–∏—Ä–æ–∂–∫–∏, —Å–∞–ª–∞—Ç—ã, –∫–æ—Ç–ª–µ—Ç—ã, –≤–∞—Ä–µ–Ω–∏–∫–∏ –∏ —Ç–¥ , –∫–æ—Ñ–µ.
–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –Ω–æ–≤–æ–º –ñ–ö –∏–∑ —É–∂–µ –∑–∞—Å–µ–ª–µ–Ω–Ω—ã—Ö 16 –¥–æ–º–æ–≤ –∏ —Å—Ç—Ä–æ—è—â–∏—Ö—Å—è 10- –ñ–ö ¬´ –í–∞—Ä—à–∞–≤—Å–∫–∏–π¬ª –ö–∏–µ–≤.
–æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è  -–∂–∏—Ç–µ–ª–∏, –∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç –≥–æ—Ç–æ–≤–∏—Ç—å , –±—Ä–∏–≥–∞–¥—ã –ø–æ —Ä–µ–º–æ–Ω—Ç—É , –º–æ–ª–æ–¥—ë–∂—å .
–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ -–∫—É–ª–∏–Ω–∞—Ä–∏—è –ù–æ–≤—É—Å–∞, —Å–µ–º–µ–π–Ω–æ–π –ø–µ–∫–∞—Ä–Ω–∏ –ø–æ –ø–∏—Ä–æ–∂–∫–∞–º.
–°–µ–π—á–∞—Å —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–µ—Ç , —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ö–æ–¥—è—â–∏–π —Ç—Ä–∞—Ñ–∏–∫.
–Ω—É–∂–µ–Ω –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–µ–º–∞ –∑–∞–∫–∞–∑–∞ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ . –ú–æ–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å —Ç–∞–∫ –∂–µ —Ä–µ–∫–ª–∞–º—É —á–µ—Ä–µ–∑ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º -
—Ç–æ–ª—å–∫–æ —Å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤ –Ω–∏—à–µ 

–ü—Ä–æ—à—É –ø–æ–¥–∞–≤–∞—Ç—å —Å—Ç–∞–≤–∫–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º, –∫—Ç–æ –∏–º–µ–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–π –æ–ø—ã—Ç –≤ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –µ–¥—ã –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º –∏ 
—Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–æ–±–Ω—ã—Ö –±–æ—Ç–æ–≤ : —Å—Ä–æ–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –∏ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —á–µ–ª–æ–≤–µ–∫ –∑–Ω–∞–ª —Å–ø–µ—Ü–∏—Ñ–∏–∫—É —É—Å–ø–µ—Ö–∞ –≤ —ç—Ç–æ–π –Ω–∏—à–µ 
'''

import sqlite3
import config
import menu
import telebot
from telebot import types
from PIL import Image

bot = telebot.TeleBot(config.TOKEN)

hello_count = []
data_base = []

base = sqlite3.connect('data base.db', check_same_thread=False)
cursor = base.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS shopping_cart (
    describe  TEXT,
    size TEXT,
    quantity INT
    )""")
base.commit()

SMS = None

@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ì—Ä–∞—Ñ—ñ–∫ —ñ –∞–¥—Ä–µ—Å–∞")
    item2 = types.KeyboardButton("–ê—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç")
    item3= types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞")
    item4= types.KeyboardButton("/start")
 
    markup.add(item1, item2,item3,item4)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç {0.first_name}!\n–í—ñ—Ç–∞—î–º–æ –≤ –Ω–∞—à—ñ–π –º–∞–ª–µ–Ω—å–∫—ñ–π –ø–µ–∫–∞—Ä–Ω—ñ".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
    global SELF_ID
    SELF_ID = message.chat.id
    print(SELF_ID)

@bot.message_handler(content_types=['text'])
def language(message):
    if message.chat.type == 'private':
        if message.text == "–ì—Ä–∞—Ñ—ñ–∫ —ñ –∞–¥—Ä–µ—Å–∞":
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞",  url='https://goo.gl/maps/dHuhDU1jPPrin9uk9')

            markup.add(item1)

            bot.send_message(message.chat.id, '–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑ 8.00 –¥–æ 18.00', reply_markup=markup)
        if message.text == "–ê—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç":
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ü—ñ—Ü–∞",  callback_data='pizza')
            item2 = types.InlineKeyboardButton("–ü–∏—Ä—ñ–∂–∫–∏",  callback_data='pyrizhky')
            #item3= types.InlineKeyboardButton("–°–∞–ª–∞—Ç–∏",  callback_data='salaty')
            #item4 = types.InlineKeyboardButton("–•–æ–ª–æ–¥–Ω—ñ –Ω–∞–ø–æ—ó",  callback_data='cold_drinks')
            item5 = types.InlineKeyboardButton("–ì–∞—Ä—è—á—ñ –Ω–∞–ø–æ—ó",  callback_data='hot_drinks')

            markup.add(item1,item2,item5)

            bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é', reply_markup=markup)

        elif message.text == "–ö–æ—Ä–∑–∏–Ω–∞":
            bot.send_message(message.chat.id, "–Ω–∞–∂–∞–ª—å –º–∏ –≤—Å–µ —â–µ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è–º —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó üò¢")
            bot.send_message(message.chat.id, "üò¢")
            for value in cursor.execute("SELECT * FROM shopping_cart"):
                bot.send_message(call.message.chat.id, value)
                print(value)
        else:
            pass

@bot.callback_query_handler(func=lambda call: True )
def callback_inline(call):
    try:          
        if call.data == 'pizza':
            print('pizza')

            markup_shunka_syr = types.InlineKeyboardMarkup(row_width=1)
            markup_syry_4 = types.InlineKeyboardMarkup(row_width=1)
            markup_diabola = types.InlineKeyboardMarkup(row_width=1)
            item8 = types.InlineKeyboardButton("–í –∫–æ—Ä–∑–∏–Ω—É 30—Å–º", callback_data='in_shopping cart_30_shunka_syr')
            item9 = types.InlineKeyboardButton("–í –∫–æ—Ä–∑–∏–Ω—É 50—Å–º", callback_data='in_shopping cart_50_shunka_syr')
            item10 = types.InlineKeyboardButton("–í –∫–æ—Ä–∑–∏–Ω—É 30—Å–º", callback_data='in_shopping cart_30_4_s')
            item11 = types.InlineKeyboardButton("–í –∫–æ—Ä–∑–∏–Ω—É 50—Å–º", callback_data='in_shopping cart_50_4_s')
            item12 = types.InlineKeyboardButton("–í –∫–æ—Ä–∑–∏–Ω—É 30—Å–º", callback_data='in_shopping cart_30_dia')
            item13 = types.InlineKeyboardButton("–í –∫–æ—Ä–∑–∏–Ω—É 50—Å–º", callback_data='in_shopping cart_50_dia')

            markup_shunka_syr.add(item8, item9)
            markup_syry_4.add(item10, item11)
            markup_diabola.add(item12, item13)



            s_s=open('photo\\shunka_syr.jfif', 'rb')
            s4=open('photo\\syry_4.jfif', 'rb')
            dia=open('photo\\diabola.jfif', 'rb')

            bot.send_photo(call.message.chat.id, s_s, menu.shunka_syr,
                                                        parse_mode='html', reply_markup=markup_shunka_syr)
            bot.send_photo(call.message.chat.id, s4, menu.syry_4,
                                                        parse_mode='html', reply_markup=markup_syry_4)
            bot.send_photo(call.message.chat.id, dia, menu.diabola,
                                                        parse_mode='html', reply_markup=markup_diabola)
            print(SMS)
            s_s.close()
            s4.close()
            dia.close()
            
        elif call.data == 'pyrizhky':
            markup = types.InlineKeyboardMarkup(row_width=1)
            item8 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", url='https://goo.gl/maps/dHuhDU1jPPrin9uk9')

            markup.add(item8)
            bot.send_photo(call.message.chat.id, open('photo\\p_syr.jfif', 'rb'), menu.p_syr,
                                                        parse_mode='html', reply_markup=markup)

            bot.send_photo(call.message.chat.id, open('photo\\p_kartoplia.jfif', 'rb'), menu.p_kartoplia,
                                                        parse_mode='html', reply_markup=markup)
            bot.send_photo(call.message.chat.id, open('photo\\p_varenia.jpg', 'rb'), menu.p_varenia,
                                                        parse_mode='html', reply_markup=markup)
              

        elif call.data == 'hot_drinks':
            print(SELF_ID)
            markup = types.InlineKeyboardMarkup(row_width=1)
            item8 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", url='https://goo.gl/maps/dHuhDU1jPPrin9uk9')

            markup.add(item8)

            bot.send_photo(call.message.chat.id, open('photo\\hd_coffe.jpg', 'rb'), menu.hd_coffe,
                                                        parse_mode='html', reply_markup=markup)
            bot.send_photo(call.message.chat.id, open('photo\\hd_capuchino.png', 'rb'), menu.hd_capuchino,
                                                        parse_mode='html', reply_markup=markup)
            #bot.send_message(call.message.chat.id, menu.hd_capuchino, reply_markup=markup) #–ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ
            bot.send_photo(call.message.chat.id, open('photo\\hd_tea.jpg', 'rb'), menu.hd_tea,
                                                        parse_mode='html', reply_markup=markup)

        elif call.data == 'in_shopping cart_30_dia':
            cursor.execute(f"SELECT describe FROM shopping_cart WHERE describe = '–î—ñ–∞–±–æ–ª–∞'")

            if cursor.fetchone() is None:
                sql = ("INSERT INTO shopping_cart VALUES (?,?,?)")
                val = ('–î—ñ–∞–±–æ–ª–∞', '30 —Å–º', 1)
                cursor.execute(sql, val)
                base.commit()
                print('–¥–æ–¥–¥–∞–Ω–æ –≤ –±–¥')
                for value in cursor.execute("SELECT * FROM shopping_cart"):
                    print(value)
            else:
                cursor.execute(f'UPDATE shopping_cart SET quantity = quantity+1 WHERE describe = "–î—ñ–∞–±–æ–ª–∞"')
                base.commit()

        elif call.data == 'in_shopping cart_50_dia':
            cursor.execute("SELECT * FROM shopping_cart")
            for value in cursor.fetchall():
                data_base.append((str(value[0]) +' '+ str(value[1])+' '+str(value[2])))
                print(value)
                print('data')
                print(data_base)
            bot.send_message(call.message.chat.id, data_base)
            print(data_base)



            # remove inline buttons
            #bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="—Ç—É—Ç –º–∞—î –±—É—Ç–∏ —Ç–µ–∫—Å—Ç, —è–∫–∏–π –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ —ñ–Ω–ª–∞–π–Ω–æ–≤–∏—Ö –∫–ª–∞–≤—ñ–∞—Ç—É—Ä?",
                #reply_markup=None)

 
    except Exception as e:
        print(repr(e))

while True:  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        bot.polling(none_stop=True)
    except OSError:
        bot.polling(none_stop=True)
